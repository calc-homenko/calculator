
@mixin anim{
	transition: all .3s ease;
}
@mixin anim-linear{
	transition: all .3s linear;
}

// Button sizes
@mixin btn-size($padding-vertical, $padding-horizontal, $font-size, $line-height) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  line-height: $line-height;
}

/* FONT SourceSansPro */
@mixin fl {font-family: 'Montserrat-Light',sans-serif;}
@mixin fr {font-family: 'Montserrat-Regular',sans-serif;}
@mixin fm {font-family: 'Montserrat-Medium',sans-serif;}
@mixin fdb {font-family: 'Montserrat-SemiBold',sans-serif;}
@mixin fb {font-family: 'Montserrat-Bold',sans-serif;}

/*images*/

@mixin cover {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: 50% 50%; }


  // vertical-align at center
@mixin vcenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%,-50%); }




/*=======================START-MEDIA=====================*/
@mixin r($width) {
  @media only screen and (max-width: $width+ "px") {
    @content; } }

@mixin rmin($width) {
  @media only screen and (min-width: $width+ "px") {
    @content; } }

/*=======================END-MEDIA=====================*/
//placeholder
@mixin placeholder {
  &::-webkit-input-placeholder { @content; }
  &:-moz-placeholder           { @content; }
  &::-moz-placeholder          { @content; }
  &:-ms-input-placeholder      { @content; }
}



@mixin css-lock($min-size: 1, $max-size: 1.4, $min-width: 20, $max-width: 100, $property: font-size, $unit: px) {
  #{$property}: #{$max-size}#{$unit};
  #{$property}: calc(#{$min-size}#{$unit} + (#{$max-size} - #{$min-size}) * ((100vw - #{$min-width}#{$unit}) / (#{$max-width} - #{$min-width})));
  @media (max-width: #{$min-width}#{$unit}) {
    #{$property}: #{$min-size}#{$unit}; }
  @media (min-width: #{$max-width}#{$unit}) {
    #{$property}: #{$max-size}#{$unit}; } }


/* media breakpoint mixin */
@mixin media-breakpoint-up($name) {
  @if map_has_key($breakpoint, $name) {
    @media (min-width: map_get($breakpoint, $name)) {
      @content;
    }
  } @else {
    @media (min-width: $name) {
      @content;
    }
  }
}

@mixin placeholder {
  &::-webkit-input-placeholder { @content; }
  &:-moz-placeholder           { @content; }
  &::-moz-placeholder          { @content; }
  &:-ms-input-placeholder      { @content; }
}

/* Single property transition mixin */
$animation-speed: .3s;

@mixin multi-transition($transition, $properties-list...) {
  transition-duration: $transition;
  //transition-timing-function: ease-in-out;
  transition-property: $properties-list;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}




// fonts
@mixin font($fontName, $folderName, $fileName, $weight, $style) {
  @font-face {
    font-family: #{$fontName};
    font-display: swap;
    src: url("../fonts/#{$folderName}/#{$fileName}.woff") format("woff"), url("../fonts/#{$folderName}/#{$fileName}.woff2") format("woff2");
    font-weight: #{$weight};
    font-style: #{$style};
  }
}

@mixin hover($transition, $properties-list...) {
  @media (any-hover: hover) {
    transition-duration: $transition;
    transition-property: $properties-list;
    &:hover {
      @content;
    }
  }
}

